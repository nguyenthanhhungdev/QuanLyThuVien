package ThuVien;

import java.util.logging.Level;
import java.util.logging.Logger;

import Polyfill.PFArray;
import Polyfill.PFFile;
import Polyfill.PFFileReader;

public class Language extends AnyId {
    private static final Logger LOGGER = Logger.getLogger(Language.class.getName());

    public Language(int id) {
        super(id);
        if (id < 0 || id > langList.size()) {
            throw new IllegalArgumentException("Invalid language id");
        }
        instance = id;
    }

    private int instance;
    // language must be added to database file
    // private static long id_counter = 0;
    private static final PFArray<String> langList = initLangList();

    private static PFArray<String> initLangList() {
        PFFileReader f = new PFFileReader("data", "List_NgonNgu.csv");
        // do not catch this exception because language is required
        PFArray<String[]> a = f.read();
        PFArray<String> langList;
        try {
            langList = new PFArray<>(a.stream().mapToInt(e -> Integer.valueOf(e[0]))
                    .max().orElse(Integer.MIN_VALUE));
        } catch (IllegalArgumentException e) {
            LOGGER.log(Level.SEVERE, "Data is corrupted", e);
            throw e;
        }
        langList.fillCapacity("N/A");
        a.stream().forEach(e -> langList.set(Integer.valueOf(e[0]), e[1]));
        return langList;
    }
}
